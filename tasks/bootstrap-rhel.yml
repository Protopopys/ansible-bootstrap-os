---
- name: Bootstrap | Check presence of fastestmirror.conf
  stat:
    path: /etc/yum/pluginconf.d/fastestmirror.conf
  register: fastestmirror

- name: Bootstrap | Disable fastestmirror plugin
  lineinfile:
    dest: /etc/yum/pluginconf.d/fastestmirror.conf
    regexp: "^enabled=.*"
    line: "enabled=0"
    state: present
  when: fastestmirror.stat.exists

- name: Bootstrap | Getting facts
  setup:
    filter: ansible_*

- name: Bootstrap | Check if EPEL repo is already configured
  stat:
    path: "{{ epel_repo_file_path }}"
  register: epel_repofile_result

- name: Bootstrap | Install EPEL repo
  yum:
    name: "{{ epel_repo_url }}"
    state: present
  register: result
  until: 'result.rc == 0'
  retries: 5
  delay: 10
  when: not epel_repofile_result.stat.exists

- name: Bootstrap | Import EPEL GPG key
  rpm_key:
    key: "{{ epel_repo_gpg_key_url }}"
    state: present
  when: not epel_repofile_result.stat.exists

- name: Bootstrap | Install Python_{{ interpreter_version }}
  yum:
    name: "{{ python[interpreter_version] }}"
    state: present
  register: result
  until: 'result.rc == 0'
  retries: 5
  delay: 10

- name: Bootstrap | Setting fact - ansible_python_interpreter
  set_fact:
    ansible_python_interpreter: "/usr/bin/python"
  when: interpreter_version == 'v2'

- name: Bootstrap | Setting fact - ansible_python_interpreter
  set_fact:
    ansible_python_interpreter: "/usr/bin/python3"
  when: interpreter_version == 'v3'

- name: Bootstrap | Install required packages
  yum:
    name: "{{ required_packages }}"
    state: present
  register: result
  until: 'result.rc == 0'
  retries: 5
  delay: 10
